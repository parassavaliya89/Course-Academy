const fs=require("fs"),logger=require("./logger");function _promesifyMkdir(r){return new Promise((e,i)=>{fs.mkdir(r,{recursive:!0},r=>{if(r)return i(errorHandler(r));e(!0)})})}function errorHandler(r){return logger.writeLog({text:r,type:"ERROR"}),r}module.exports.readFile=function(r){return new Promise((e,i)=>{fs.readFile(r,(r,o)=>{if(r)return i(errorHandler(r));e(o)})})},module.exports.saveFile=function(r,e){return new Promise((i,o)=>{fs.writeFile(r,e,r=>{if(r)return o(errorHandler(r));i(!0)})})},module.exports.ensureExitsDir=function(r){return new Promise((e,i)=>{if(!Array.isArray(r))return logger.writeLog({text:"No array of dirs provided",type:"ERROR"}),i("No array of dirs provided");Promise.all(r.map(r=>_promesifyMkdir(r))).then(e).catch(i)})},module.exports.deleteFile=function(r){fs.existsSync(r)&&(logger.writeLog({text:"Delete file "+r,type:"LOG"}),fs.unlink(r,(function(r){if(r)throw errorHandler(r)})))};